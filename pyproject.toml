[project]
name = "scrapy-parser-pep"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.9"
dependencies = []

[tool.ruff]
src = ["backend"]
line-length = 79
target-version = "py312"

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations",
    "*/migrations/*",
    "manage.py"
]

[tool.ruff.lint]
select = [
    "D",   # docstring
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort (сортировка импортов)
    "N",   # pep8-naming (соглашения об именовании)
    "UP",  # pyupgrade (модернизация синтаксиса)
    "S",   # flake8-bandit (безопасность)
    "BLE", # flake8-blind-except (голые except)
    "FBT", # flake8-boolean-trap
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format (ленивое форматирование логов)
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PT",  # flake8-pytest-style (стилистика тестов)
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports (запрет относительных импортов)
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "TD",  # flake8-todos
    "FIX", # flake8-fixme
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "PERF", # Perflint
    "FURB", # refurb
    "LOG",  # flake8-logging
    "RUF",   # Ruff-specific rules
]

ignore = [
    "ANN401", # Использование Any в аннотациях
    "S101",   # Использование assert
    "D100",   # Missing docstring in public module
    # "D101",   # Missing docstring in public class
    # "D102",   # Missing docstring in public method
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring meta class
    "D107",   # Missing docstring in __init__
    "D203",   # incorrect-blank-line-before-class (конфликтует с D211)
    "D205",   # 1 blank line required between summary line and description
    "D212",   # Multi-line docstring summary should start at the first line
    "D413",   # Missing blank line after last section
    "D417",   # Missing trailing newline in docstring
    "FBT001", # Boolean positional arg in function definition
    "FBT002", # Boolean default arg in function definition
    "TD001",  # Missing author in TODO
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link on line following TODO
    "FIX001", # Line contains FIXME
    "FIX002", # Line contains TODO
    "COM812", # Trailing comma missing (конфликт с форматтером)
    "ISC001", # Implicitly concatenated string literals (конфликт с форматтером)
    "RUF001", # String contains ambiguous unicode character
    "BLE001", # Перехват "слепых" исключений
    "T201",   # Печать print
    "RUF002",  # Использование кириллицы
]

unfixable = [
    "F401",  # Неиспользуемые импорты
    "F841"   # Неиспользуемые переменные
]

[tool.ruff.lint.isort]
known-local-folder = ["apps", "config"]
lines-between-types = 0

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "double"
docstring-quotes = "double"
avoid-escape = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.flake8-type-checking]
strict = false

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*/settings/*.py" = ["F403"]
